/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ContactLinkComponent
 */
export interface ContactLinkComponent {
  /**
   *
   * @type {number}
   * @memberof ContactLinkComponent
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof ContactLinkComponent
   */
  handle?: string;
  /**
   *
   * @type {string}
   * @memberof ContactLinkComponent
   */
  platform?: ContactLinkComponentPlatformEnum;
}

/**
 * @export
 */
export const ContactLinkComponentPlatformEnum = {
  Generic: 'generic',
  Email: 'email',
  Facebook: 'facebook',
  Youtube: 'youtube',
  Instagram: 'instagram',
  Tiktok: 'tiktok',
  Snapchat: 'snapchat',
  Twitter: 'twitter',
  Reddit: 'reddit',
  Discord: 'discord',
  Twitch: 'twitch',
  Github: 'github',
} as const;
export type ContactLinkComponentPlatformEnum =
  (typeof ContactLinkComponentPlatformEnum)[keyof typeof ContactLinkComponentPlatformEnum];

/**
 * Check if a given object implements the ContactLinkComponent interface.
 */
export function instanceOfContactLinkComponent(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ContactLinkComponentFromJSON(json: any): ContactLinkComponent {
  return ContactLinkComponentFromJSONTyped(json, false);
}

export function ContactLinkComponentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ContactLinkComponent {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    handle: !exists(json, 'handle') ? undefined : json['handle'],
    platform: !exists(json, 'platform') ? undefined : json['platform'],
  };
}

export function ContactLinkComponentToJSON(value?: ContactLinkComponent | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    handle: value.handle,
    platform: value.platform,
  };
}
