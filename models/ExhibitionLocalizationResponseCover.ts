/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInner } from './ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInner';
import {
  ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInnerFromJSON,
  ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInnerFromJSONTyped,
  ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInnerToJSON,
} from './ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInner';

/**
 *
 * @export
 * @interface ExhibitionLocalizationResponseCover
 */
export interface ExhibitionLocalizationResponseCover {
  /**
   *
   * @type {ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInner}
   * @memberof ExhibitionLocalizationResponseCover
   */
  data?: ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInner;
}

/**
 * Check if a given object implements the ExhibitionLocalizationResponseCover interface.
 */
export function instanceOfExhibitionLocalizationResponseCover(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ExhibitionLocalizationResponseCoverFromJSON(
  json: any
): ExhibitionLocalizationResponseCover {
  return ExhibitionLocalizationResponseCoverFromJSONTyped(json, false);
}

export function ExhibitionLocalizationResponseCoverFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ExhibitionLocalizationResponseCover {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: !exists(json, 'data')
      ? undefined
      : ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInnerFromJSON(json['data']),
  };
}

export function ExhibitionLocalizationResponseCoverToJSON(
  value?: ExhibitionLocalizationResponseCover | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data: ArtistLocalizationResponseArtworksDataInnerAttributesMediaDataInnerToJSON(value.data),
  };
}
