/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ArtistLocalizationRequestArtworksInner } from './ArtistLocalizationRequestArtworksInner';
import {
  ArtistLocalizationRequestArtworksInnerFromJSON,
  ArtistLocalizationRequestArtworksInnerFromJSONTyped,
  ArtistLocalizationRequestArtworksInnerToJSON,
} from './ArtistLocalizationRequestArtworksInner';

/**
 *
 * @export
 * @interface ArtworkLocalizationRequest
 */
export interface ArtworkLocalizationRequest {
  /**
   *
   * @type {string}
   * @memberof ArtworkLocalizationRequest
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof ArtworkLocalizationRequest
   */
  description?: string;
  /**
   *
   * @type {Array<ArtistLocalizationRequestArtworksInner>}
   * @memberof ArtworkLocalizationRequest
   */
  artists?: Array<ArtistLocalizationRequestArtworksInner>;
  /**
   *
   * @type {Array<ArtistLocalizationRequestArtworksInner>}
   * @memberof ArtworkLocalizationRequest
   */
  media?: Array<ArtistLocalizationRequestArtworksInner>;
  /**
   *
   * @type {Date}
   * @memberof ArtworkLocalizationRequest
   */
  creationDate?: Date;
  /**
   *
   * @type {string}
   * @memberof ArtworkLocalizationRequest
   */
  originalTitle?: string;
  /**
   *
   * @type {string}
   * @memberof ArtworkLocalizationRequest
   */
  handle: string;
  /**
   *
   * @type {string}
   * @memberof ArtworkLocalizationRequest
   */
  locale: string;
}

/**
 * Check if a given object implements the ArtworkLocalizationRequest interface.
 */
export function instanceOfArtworkLocalizationRequest(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'title' in value;
  isInstance = isInstance && 'handle' in value;
  isInstance = isInstance && 'locale' in value;

  return isInstance;
}

export function ArtworkLocalizationRequestFromJSON(json: any): ArtworkLocalizationRequest {
  return ArtworkLocalizationRequestFromJSONTyped(json, false);
}

export function ArtworkLocalizationRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ArtworkLocalizationRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    title: json['title'],
    description: !exists(json, 'description') ? undefined : json['description'],
    artists: !exists(json, 'artists')
      ? undefined
      : (json['artists'] as Array<any>).map(ArtistLocalizationRequestArtworksInnerFromJSON),
    media: !exists(json, 'media')
      ? undefined
      : (json['media'] as Array<any>).map(ArtistLocalizationRequestArtworksInnerFromJSON),
    creationDate: !exists(json, 'creationDate') ? undefined : new Date(json['creationDate']),
    originalTitle: !exists(json, 'originalTitle') ? undefined : json['originalTitle'],
    handle: json['handle'],
    locale: json['locale'],
  };
}

export function ArtworkLocalizationRequestToJSON(value?: ArtworkLocalizationRequest | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    title: value.title,
    description: value.description,
    artists:
      value.artists === undefined
        ? undefined
        : (value.artists as Array<any>).map(ArtistLocalizationRequestArtworksInnerToJSON),
    media:
      value.media === undefined
        ? undefined
        : (value.media as Array<any>).map(ArtistLocalizationRequestArtworksInnerToJSON),
    creationDate:
      value.creationDate === undefined ? undefined : value.creationDate.toISOString().substr(0, 10),
    originalTitle: value.originalTitle,
    handle: value.handle,
    locale: value.locale,
  };
}
