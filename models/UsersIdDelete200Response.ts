/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface UsersIdDelete200Response
 */
export interface UsersIdDelete200Response {
  /**
   *
   * @type {number}
   * @memberof UsersIdDelete200Response
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof UsersIdDelete200Response
   */
  username?: string;
  /**
   *
   * @type {string}
   * @memberof UsersIdDelete200Response
   */
  email?: string;
  /**
   *
   * @type {string}
   * @memberof UsersIdDelete200Response
   */
  provider?: string;
  /**
   *
   * @type {boolean}
   * @memberof UsersIdDelete200Response
   */
  confirmed?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof UsersIdDelete200Response
   */
  blocked?: boolean;
  /**
   *
   * @type {Date}
   * @memberof UsersIdDelete200Response
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof UsersIdDelete200Response
   */
  updatedAt?: Date;
}

/**
 * Check if a given object implements the UsersIdDelete200Response interface.
 */
export function instanceOfUsersIdDelete200Response(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UsersIdDelete200ResponseFromJSON(json: any): UsersIdDelete200Response {
  return UsersIdDelete200ResponseFromJSONTyped(json, false);
}

export function UsersIdDelete200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UsersIdDelete200Response {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    username: !exists(json, 'username') ? undefined : json['username'],
    email: !exists(json, 'email') ? undefined : json['email'],
    provider: !exists(json, 'provider') ? undefined : json['provider'],
    confirmed: !exists(json, 'confirmed') ? undefined : json['confirmed'],
    blocked: !exists(json, 'blocked') ? undefined : json['blocked'],
    createdAt: !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
  };
}

export function UsersIdDelete200ResponseToJSON(value?: UsersIdDelete200Response | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    username: value.username,
    email: value.email,
    provider: value.provider,
    confirmed: value.confirmed,
    blocked: value.blocked,
    createdAt: value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    updatedAt: value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
  };
}
