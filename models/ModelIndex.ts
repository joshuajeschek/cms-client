/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AboutImageDataAttributesFolderDataAttributesParent } from './AboutImageDataAttributesFolderDataAttributesParent';
import {
  AboutImageDataAttributesFolderDataAttributesParentFromJSON,
  AboutImageDataAttributesFolderDataAttributesParentFromJSONTyped,
  AboutImageDataAttributesFolderDataAttributesParentToJSON,
} from './AboutImageDataAttributesFolderDataAttributesParent';
import type { IndexExhibitions } from './IndexExhibitions';
import {
  IndexExhibitionsFromJSON,
  IndexExhibitionsFromJSONTyped,
  IndexExhibitionsToJSON,
} from './IndexExhibitions';
import type { IndexLocalizations } from './IndexLocalizations';
import {
  IndexLocalizationsFromJSON,
  IndexLocalizationsFromJSONTyped,
  IndexLocalizationsToJSON,
} from './IndexLocalizations';
import type { IndexUpdate } from './IndexUpdate';
import { IndexUpdateFromJSON, IndexUpdateFromJSONTyped, IndexUpdateToJSON } from './IndexUpdate';

/**
 *
 * @export
 * @interface ModelIndex
 */
export interface ModelIndex {
  /**
   *
   * @type {IndexExhibitions}
   * @memberof ModelIndex
   */
  exhibitions?: IndexExhibitions;
  /**
   *
   * @type {IndexUpdate}
   * @memberof ModelIndex
   */
  update?: IndexUpdate;
  /**
   *
   * @type {Date}
   * @memberof ModelIndex
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof ModelIndex
   */
  updatedAt?: Date;
  /**
   *
   * @type {AboutImageDataAttributesFolderDataAttributesParent}
   * @memberof ModelIndex
   */
  createdBy?: AboutImageDataAttributesFolderDataAttributesParent;
  /**
   *
   * @type {AboutImageDataAttributesFolderDataAttributesParent}
   * @memberof ModelIndex
   */
  updatedBy?: AboutImageDataAttributesFolderDataAttributesParent;
  /**
   *
   * @type {IndexLocalizations}
   * @memberof ModelIndex
   */
  localizations?: IndexLocalizations;
  /**
   *
   * @type {string}
   * @memberof ModelIndex
   */
  locale?: string;
}

/**
 * Check if a given object implements the ModelIndex interface.
 */
export function instanceOfModelIndex(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ModelIndexFromJSON(json: any): ModelIndex {
  return ModelIndexFromJSONTyped(json, false);
}

export function ModelIndexFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelIndex {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    exhibitions: !exists(json, 'exhibitions')
      ? undefined
      : IndexExhibitionsFromJSON(json['exhibitions']),
    update: !exists(json, 'update') ? undefined : IndexUpdateFromJSON(json['update']),
    createdAt: !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
    createdBy: !exists(json, 'createdBy')
      ? undefined
      : AboutImageDataAttributesFolderDataAttributesParentFromJSON(json['createdBy']),
    updatedBy: !exists(json, 'updatedBy')
      ? undefined
      : AboutImageDataAttributesFolderDataAttributesParentFromJSON(json['updatedBy']),
    localizations: !exists(json, 'localizations')
      ? undefined
      : IndexLocalizationsFromJSON(json['localizations']),
    locale: !exists(json, 'locale') ? undefined : json['locale'],
  };
}

export function ModelIndexToJSON(value?: ModelIndex | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    exhibitions: IndexExhibitionsToJSON(value.exhibitions),
    update: IndexUpdateToJSON(value.update),
    createdAt: value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    updatedAt: value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
    createdBy: AboutImageDataAttributesFolderDataAttributesParentToJSON(value.createdBy),
    updatedBy: AboutImageDataAttributesFolderDataAttributesParentToJSON(value.updatedBy),
    localizations: IndexLocalizationsToJSON(value.localizations),
    locale: value.locale,
  };
}
