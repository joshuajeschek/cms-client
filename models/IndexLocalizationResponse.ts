/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AboutLocalizationResponseImageDataAttributesFolderDataAttributesParent } from './AboutLocalizationResponseImageDataAttributesFolderDataAttributesParent';
import {
  AboutLocalizationResponseImageDataAttributesFolderDataAttributesParentFromJSON,
  AboutLocalizationResponseImageDataAttributesFolderDataAttributesParentFromJSONTyped,
  AboutLocalizationResponseImageDataAttributesFolderDataAttributesParentToJSON,
} from './AboutLocalizationResponseImageDataAttributesFolderDataAttributesParent';
import type { AboutLocalizationResponseLocalizations } from './AboutLocalizationResponseLocalizations';
import {
  AboutLocalizationResponseLocalizationsFromJSON,
  AboutLocalizationResponseLocalizationsFromJSONTyped,
  AboutLocalizationResponseLocalizationsToJSON,
} from './AboutLocalizationResponseLocalizations';
import type { IndexLocalizationResponseExhibitions } from './IndexLocalizationResponseExhibitions';
import {
  IndexLocalizationResponseExhibitionsFromJSON,
  IndexLocalizationResponseExhibitionsFromJSONTyped,
  IndexLocalizationResponseExhibitionsToJSON,
} from './IndexLocalizationResponseExhibitions';
import type { IndexLocalizationResponseUpdate } from './IndexLocalizationResponseUpdate';
import {
  IndexLocalizationResponseUpdateFromJSON,
  IndexLocalizationResponseUpdateFromJSONTyped,
  IndexLocalizationResponseUpdateToJSON,
} from './IndexLocalizationResponseUpdate';

/**
 *
 * @export
 * @interface IndexLocalizationResponse
 */
export interface IndexLocalizationResponse {
  /**
   *
   * @type {number}
   * @memberof IndexLocalizationResponse
   */
  id?: number;
  /**
   *
   * @type {IndexLocalizationResponseExhibitions}
   * @memberof IndexLocalizationResponse
   */
  exhibitions?: IndexLocalizationResponseExhibitions;
  /**
   *
   * @type {IndexLocalizationResponseUpdate}
   * @memberof IndexLocalizationResponse
   */
  update?: IndexLocalizationResponseUpdate;
  /**
   *
   * @type {Date}
   * @memberof IndexLocalizationResponse
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof IndexLocalizationResponse
   */
  updatedAt?: Date;
  /**
   *
   * @type {AboutLocalizationResponseImageDataAttributesFolderDataAttributesParent}
   * @memberof IndexLocalizationResponse
   */
  createdBy?: AboutLocalizationResponseImageDataAttributesFolderDataAttributesParent;
  /**
   *
   * @type {AboutLocalizationResponseImageDataAttributesFolderDataAttributesParent}
   * @memberof IndexLocalizationResponse
   */
  updatedBy?: AboutLocalizationResponseImageDataAttributesFolderDataAttributesParent;
  /**
   *
   * @type {AboutLocalizationResponseLocalizations}
   * @memberof IndexLocalizationResponse
   */
  localizations?: AboutLocalizationResponseLocalizations;
  /**
   *
   * @type {string}
   * @memberof IndexLocalizationResponse
   */
  locale?: string;
}

/**
 * Check if a given object implements the IndexLocalizationResponse interface.
 */
export function instanceOfIndexLocalizationResponse(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function IndexLocalizationResponseFromJSON(json: any): IndexLocalizationResponse {
  return IndexLocalizationResponseFromJSONTyped(json, false);
}

export function IndexLocalizationResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): IndexLocalizationResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    exhibitions: !exists(json, 'exhibitions')
      ? undefined
      : IndexLocalizationResponseExhibitionsFromJSON(json['exhibitions']),
    update: !exists(json, 'update')
      ? undefined
      : IndexLocalizationResponseUpdateFromJSON(json['update']),
    createdAt: !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
    createdBy: !exists(json, 'createdBy')
      ? undefined
      : AboutLocalizationResponseImageDataAttributesFolderDataAttributesParentFromJSON(
          json['createdBy']
        ),
    updatedBy: !exists(json, 'updatedBy')
      ? undefined
      : AboutLocalizationResponseImageDataAttributesFolderDataAttributesParentFromJSON(
          json['updatedBy']
        ),
    localizations: !exists(json, 'localizations')
      ? undefined
      : AboutLocalizationResponseLocalizationsFromJSON(json['localizations']),
    locale: !exists(json, 'locale') ? undefined : json['locale'],
  };
}

export function IndexLocalizationResponseToJSON(value?: IndexLocalizationResponse | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    exhibitions: IndexLocalizationResponseExhibitionsToJSON(value.exhibitions),
    update: IndexLocalizationResponseUpdateToJSON(value.update),
    createdAt: value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    updatedAt: value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
    createdBy: AboutLocalizationResponseImageDataAttributesFolderDataAttributesParentToJSON(
      value.createdBy
    ),
    updatedBy: AboutLocalizationResponseImageDataAttributesFolderDataAttributesParentToJSON(
      value.updatedBy
    ),
    localizations: AboutLocalizationResponseLocalizationsToJSON(value.localizations),
    locale: value.locale,
  };
}
