/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ArtistLocalizationRequestArtworksInner } from './ArtistLocalizationRequestArtworksInner';
import {
  ArtistLocalizationRequestArtworksInnerFromJSON,
  ArtistLocalizationRequestArtworksInnerFromJSONTyped,
  ArtistLocalizationRequestArtworksInnerToJSON,
} from './ArtistLocalizationRequestArtworksInner';
import type { ContactContactInformationComponent } from './ContactContactInformationComponent';
import {
  ContactContactInformationComponentFromJSON,
  ContactContactInformationComponentFromJSONTyped,
  ContactContactInformationComponentToJSON,
} from './ContactContactInformationComponent';

/**
 *
 * @export
 * @interface ArtistRequestData
 */
export interface ArtistRequestData {
  /**
   *
   * @type {string}
   * @memberof ArtistRequestData
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof ArtistRequestData
   */
  bio?: string;
  /**
   *
   * @type {string}
   * @memberof ArtistRequestData
   */
  handle: string;
  /**
   *
   * @type {Array<ArtistLocalizationRequestArtworksInner>}
   * @memberof ArtistRequestData
   */
  artworks?: Array<ArtistLocalizationRequestArtworksInner>;
  /**
   *
   * @type {ArtistLocalizationRequestArtworksInner}
   * @memberof ArtistRequestData
   */
  picture?: ArtistLocalizationRequestArtworksInner;
  /**
   *
   * @type {Array<ContactContactInformationComponent>}
   * @memberof ArtistRequestData
   */
  contact?: Array<ContactContactInformationComponent>;
  /**
   *
   * @type {Date}
   * @memberof ArtistRequestData
   */
  birthday?: Date;
  /**
   *
   * @type {string}
   * @memberof ArtistRequestData
   */
  locale?: string;
}

/**
 * Check if a given object implements the ArtistRequestData interface.
 */
export function instanceOfArtistRequestData(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'name' in value;
  isInstance = isInstance && 'handle' in value;

  return isInstance;
}

export function ArtistRequestDataFromJSON(json: any): ArtistRequestData {
  return ArtistRequestDataFromJSONTyped(json, false);
}

export function ArtistRequestDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ArtistRequestData {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json['name'],
    bio: !exists(json, 'bio') ? undefined : json['bio'],
    handle: json['handle'],
    artworks: !exists(json, 'artworks')
      ? undefined
      : (json['artworks'] as Array<any>).map(ArtistLocalizationRequestArtworksInnerFromJSON),
    picture: !exists(json, 'picture')
      ? undefined
      : ArtistLocalizationRequestArtworksInnerFromJSON(json['picture']),
    contact: !exists(json, 'contact')
      ? undefined
      : (json['contact'] as Array<any>).map(ContactContactInformationComponentFromJSON),
    birthday: !exists(json, 'birthday') ? undefined : new Date(json['birthday']),
    locale: !exists(json, 'locale') ? undefined : json['locale'],
  };
}

export function ArtistRequestDataToJSON(value?: ArtistRequestData | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    bio: value.bio,
    handle: value.handle,
    artworks:
      value.artworks === undefined
        ? undefined
        : (value.artworks as Array<any>).map(ArtistLocalizationRequestArtworksInnerToJSON),
    picture: ArtistLocalizationRequestArtworksInnerToJSON(value.picture),
    contact:
      value.contact === undefined
        ? undefined
        : (value.contact as Array<any>).map(ContactContactInformationComponentToJSON),
    birthday: value.birthday === undefined ? undefined : value.birthday.toISOString().substr(0, 10),
    locale: value.locale,
  };
}
