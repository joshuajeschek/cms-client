/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface AboutListResponseMetaPagination
 */
export interface AboutListResponseMetaPagination {
  /**
   *
   * @type {number}
   * @memberof AboutListResponseMetaPagination
   */
  page?: number;
  /**
   *
   * @type {number}
   * @memberof AboutListResponseMetaPagination
   */
  pageSize?: number;
  /**
   *
   * @type {number}
   * @memberof AboutListResponseMetaPagination
   */
  pageCount?: number;
  /**
   *
   * @type {number}
   * @memberof AboutListResponseMetaPagination
   */
  total?: number;
}

/**
 * Check if a given object implements the AboutListResponseMetaPagination interface.
 */
export function instanceOfAboutListResponseMetaPagination(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function AboutListResponseMetaPaginationFromJSON(
  json: any
): AboutListResponseMetaPagination {
  return AboutListResponseMetaPaginationFromJSONTyped(json, false);
}

export function AboutListResponseMetaPaginationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AboutListResponseMetaPagination {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    page: !exists(json, 'page') ? undefined : json['page'],
    pageSize: !exists(json, 'pageSize') ? undefined : json['pageSize'],
    pageCount: !exists(json, 'pageCount') ? undefined : json['pageCount'],
    total: !exists(json, 'total') ? undefined : json['total'],
  };
}

export function AboutListResponseMetaPaginationToJSON(
  value?: AboutListResponseMetaPagination | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    page: value.page,
    pageSize: value.pageSize,
    pageCount: value.pageCount,
    total: value.total,
  };
}
