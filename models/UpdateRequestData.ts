/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface UpdateRequestData
 */
export interface UpdateRequestData {
  /**
   *
   * @type {string}
   * @memberof UpdateRequestData
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateRequestData
   */
  content?: string;
  /**
   *
   * @type {Date}
   * @memberof UpdateRequestData
   */
  datetime?: Date;
  /**
   *
   * @type {string}
   * @memberof UpdateRequestData
   */
  locale?: string;
}

/**
 * Check if a given object implements the UpdateRequestData interface.
 */
export function instanceOfUpdateRequestData(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UpdateRequestDataFromJSON(json: any): UpdateRequestData {
  return UpdateRequestDataFromJSONTyped(json, false);
}

export function UpdateRequestDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UpdateRequestData {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    title: !exists(json, 'title') ? undefined : json['title'],
    content: !exists(json, 'content') ? undefined : json['content'],
    datetime: !exists(json, 'datetime') ? undefined : new Date(json['datetime']),
    locale: !exists(json, 'locale') ? undefined : json['locale'],
  };
}

export function UpdateRequestDataToJSON(value?: UpdateRequestData | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    title: value.title,
    content: value.content,
    datetime: value.datetime === undefined ? undefined : value.datetime.toISOString(),
    locale: value.locale,
  };
}
