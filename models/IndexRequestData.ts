/* tslint:disable */
/* eslint-disable */
/**
 * zwischenwelten API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@jeschek.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AboutLocalizationRequestImage } from './AboutLocalizationRequestImage';
import {
  AboutLocalizationRequestImageFromJSON,
  AboutLocalizationRequestImageFromJSONTyped,
  AboutLocalizationRequestImageToJSON,
} from './AboutLocalizationRequestImage';

/**
 *
 * @export
 * @interface IndexRequestData
 */
export interface IndexRequestData {
  /**
   *
   * @type {Array<AboutLocalizationRequestImage>}
   * @memberof IndexRequestData
   */
  exhibitions?: Array<AboutLocalizationRequestImage>;
  /**
   *
   * @type {AboutLocalizationRequestImage}
   * @memberof IndexRequestData
   */
  update?: AboutLocalizationRequestImage;
  /**
   *
   * @type {string}
   * @memberof IndexRequestData
   */
  locale?: string;
}

/**
 * Check if a given object implements the IndexRequestData interface.
 */
export function instanceOfIndexRequestData(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function IndexRequestDataFromJSON(json: any): IndexRequestData {
  return IndexRequestDataFromJSONTyped(json, false);
}

export function IndexRequestDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): IndexRequestData {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    exhibitions: !exists(json, 'exhibitions')
      ? undefined
      : (json['exhibitions'] as Array<any>).map(AboutLocalizationRequestImageFromJSON),
    update: !exists(json, 'update')
      ? undefined
      : AboutLocalizationRequestImageFromJSON(json['update']),
    locale: !exists(json, 'locale') ? undefined : json['locale'],
  };
}

export function IndexRequestDataToJSON(value?: IndexRequestData | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    exhibitions:
      value.exhibitions === undefined
        ? undefined
        : (value.exhibitions as Array<any>).map(AboutLocalizationRequestImageToJSON),
    update: AboutLocalizationRequestImageToJSON(value.update),
    locale: value.locale,
  };
}
